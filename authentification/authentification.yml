---
openapi: 3.0.0
info:
  title: Authentification API
  description: This is the API of the authentification service
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/pokefumi/Authentification/1-0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Operations available only to admins
- name: reporter
  description: Operation available only to reporter
- name: player
  description: Operations available only to player
paths:
  /:
    get:
      tags:
        - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /usersLogin:
    get:
      tags:
      - admins
      summary: get the full JSON database
      description: Get all the users login info in Json DB
      
      parameters:
        - in: header
          name: token
          schema:
            type: string
            format: uuid
          required: true
      
      responses:
        "200":
          description: full JSON database 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
        "401":
          description: authentification required to access this endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "403":
          description: Don't have access with your current role, admin only
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /register:
    post:
      tags:
        - player
      summary: Register a player into the database
      description: Register a new player to the game, two players cannot have the same username
      requestBody: 
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/LoginInfo'

      responses:
        '201':
          description: Creation of the player successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: integer
                    description: number of the registered player in the database

                
        '400':
          description: Creation of the player failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /login:
    get:
      tags:
      - player
      - reporter
      summary: get the token of the player
      description: |
        By passing in the appropriate options, you can get a user info
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
      responses:
        "200":
          description: Info of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        "400":
          description: bad input parameter

components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          description: Description of the failure
    LoginInfo:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/LoginInfo'
    UserInfo:
      required:
      - login
      - token
      type: object
      properties:
        token:
          type: string
          example: thisisatoken
